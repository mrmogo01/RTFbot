import logging
from aiogram import Bot, Dispatcher, executor, types
import difflib

API_TOKEN = '6986827387:AAFq38U-MEzy9sw1hPBuH50NRmKFjDFAMSM'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# Глобальная переменная для хранения состояния режима ИИ
is_ai_mode_on = False
# Словарь для хранения обучаемых вопросов и ответов
qa_pairs = {
    "Привет": "Привет! Чем могу помочь?",
    "Как дела?": "У меня всё отлично, спасибо!",
    # Добавьте свои собственные вопросы и ответы
}

# Порог сходства для предполагаемого ответа (в процентах)
SIMILARITY_THRESHOLD = 70


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("Button 1")
    button2 = types.KeyboardButton("Button 2")
    markup.add(button1, button2)
    await message.answer("Привет! Я твой Telegram бот.", reply_markup=markup)


@dp.message_handler(lambda message: message.text == "Button 1")
async def turn_on_ai_mode(message: types.Message):
    global is_ai_mode_on
    is_ai_mode_on = True
    await message.answer("Режим ИИ активирован. Теперь я могу отвечать на вопросы.")


@dp.message_handler(lambda message: message.text == "Button 3")
async def turn_off_ai_mode(message: types.Message):
    global is_ai_mode_on
    is_ai_mode_on = False
    await message.answer("Режим ИИ деактивирован.")


@dp.message_handler()
async def respond_to_message(message: types.Message):
    global is_ai_mode_on
    if is_ai_mode_on:
        # Если режим ИИ включен, ищем ответ в обученных данных
        if message.text in qa_pairs:
            await message.answer(qa_pairs[message.text])
        else:
            # Проверяем сходство вопроса пользователя с обученными данными
            most_similar_question = difflib.get_close_matches(message.text, qa_pairs.keys(), n=1, cutoff=SIMILARITY_THRESHOLD / 100)
            if most_similar_question:
                await message.answer(qa_pairs[most_similar_question[0]])
            else:
                await message.answer("Извините, я не знаю ответ на этот вопрос.")
    else:
        await message.answer("Пожалуйста, активируйте режим ИИ, чтобы задавать вопросы.")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
